# global configurations

server:
  tomcat:
    # default tomcat settings
    use-forward-headers: ${TOMCAT_USE_FORWARD_HEADERS:true}
    protocol-header: ${TOMCAT_PROTOCOL_HEADER:x-forwarded-proto}

exchange:
  config:
    order-book-depth: ${ORDER_BOOK_DEPTH:50}
    debug-mode: ${EXCHANGE_DEBUG_MODE:false}
    time-zone: ${EXCHANGE_TIME_ZONE:}
    hmac-key: ${EXCHANGE_HMAC_KEY:HmacKey4ExchangeConfig}
    session-timeout: ${EXCHANGE_SESSION_TIMEOUT:P3D}
    api-endpoints:
      trading-api: ${TRADING_API:http://localhost:8001}
      trading-engine-api: ${TRADING_ENGINE_API:http://localhost:8002}

  setting:
    timezone: ${EXCHANGE_TIMEZONE:}
    aes-key: ${EXCHANGE_AES_KEY:CryptoExchangeAESRandomSecureKey}
    endpoint:
      tradingApi: ${TRADING_API_ENDPOINT:http://localhost:8002}
      tradingEngineApi: ${TRADING_ENGINE_API_ENDPOINT:http://localhost:8003}

spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:http://localhost:9092}
    consumer:
      # set consumer group id (blank for auto)
      group-id: ${KAFKA_CONSUMER_GROUP_ID:}
      auto-offset-reset: ${KAFKA_CONSUMER_AUTO_OFFSET_RESET:latest}
      max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:500}
      max-partition-fetch-bytes: ${KAFKA_MAX_PARTITION_FETCH_BYTES:1000000}

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}

  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}/${DB_NAME:exchange}?allowPublicKeyRetrieval=true&useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=utf8
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      auto-commit: false
      connection-timeout: ${DB_TIMEOUT:3000}
      validation-timeout: ${DB_TIMEOUT:3000}
      max-lifetime: 600000
      maximum-pool-size: ${DB_POOL_MAX:500}
      minimum-idle: ${DB_POOL_IDEL:1}

logging:
  level:
    root: ${LOGGING_ROOT_LEVEL:INFO}
    org.apache.kafka: ${LOGGING_KAFKA_LEVEL:WARN}
    com.helltractor.exchange: ${LOGGING_EXCHANGE_LEVEL:INFO}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
